New-Item -ItemType Directory -Force -Path C:\VagrantHome
New-Item -ItemType Directory -Force -Path C:\VTemp

$env:VAGRANT_HOME = 'C:\VagrantHome'
$env:TMP = 'C:\VTemp'
$env:TEMP = 'C:\VTemp'


[System.Environment]::SetEnvironmentVariable('VAGRANT_HOME', 'C:\VagrantHome', 'User')
[System.Environment]::SetEnvironmentVariable('TMP', 'C:\VTemp', 'User')
[System.Environment]::SetEnvironmentVariable('TEMP', 'C:\VTemp', 'User')

# Remove user-level Vagrant and temp overrides
[System.Environment]::SetEnvironmentVariable('VAGRANT_HOME', $null, 'User')
[System.Environment]::SetEnvironmentVariable('TMP', $null, 'User')
[System.Environment]::SetEnvironmentVariable('TEMP', $null, 'User')




echo $env:VAGRANT_HOME
echo $env:TMP
echo $env:TEMP


vagrant plugin expunge --force
vagrant global-status --prune

vagrant plugin install nokogiri --plugin-clean-sources --plugin-source https://rubygems.org
vagrant plugin install vagrant-vsphere --plugin-clean-sources --plugin-source https://rubygems.org





$env:TMP = 'C:\Temp'
$env:TEMP = 'C:\Temp'
$env:VAGRANT_HOME = 'C:\VagrantHome'

vagrant plugin install vagrant-vsphere --plugin-clean-sources --plugin-source https://rubygems.org



(Resolve-Path (Join-Path (Split-Path (Get-Command vagrant).Source -Parent) '..\embedded')).Path

# Step 1 — create /usr/tmp if it exists
New-Item -ItemType Directory -Force -Path "C:\Program Files (x86)\Vagrant\embedded\usr\tmp"

# Step 2 — create /mingw64/usr/tmp if that folder exists too
New-Item -ItemType Directory -Force -Path "C:\Program Files (x86)\Vagrant\embedded\mingw64\usr\tmp"

& "C:\Program Files (x86)\Vagrant\embedded\bin\gem.bat" sources list



